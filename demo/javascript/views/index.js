// Generated by CoffeeScript 1.6.2
var SparseDemo, global,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

global = typeof exports !== "undefined" && exports !== null ? exports : window;

if (!global.SparseDemo) {
  SparseDemo = global.SparseDemo = {};
}

(function($) {
  'use strict';
  var _ref;

  return SparseDemo.IndexView = (function(_super) {
    __extends(IndexView, _super);

    function IndexView() {
      _ref = IndexView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    IndexView.prototype.collection = new sparse.Batch;

    IndexView.prototype.events = {
      'click #demo_reset': function(evt) {
        var _this = this;

        this.collection.exec({
          complete: function(m, r, o) {
            return $('body').unmask();
          },
          error: function(m, r, o) {
            return $('body').unmask();
          }
        });
        return $('body').mask('');
      }
    };

    IndexView.prototype.childrenComplete = function() {
      var _this = this;

      _.each(this.__children, function(v, k) {
        v.on('loadingStart', function() {
          return $('body').mask('');
        });
        return v.on('loadingStop', function() {
          return $('body').unmask();
        });
      });
      return this['#batch'].on('defaultDataLoaded', function(evt) {
        return _this['#collections'].loadCollection();
      });
    };

    IndexView.prototype.subviews = {
      '#models': SparseDemo.ModelView,
      '#users': SparseDemo.UserView,
      '#collections': SparseDemo.CollectionView,
      '#batch': SparseDemo.BatchView
    };

    return IndexView;

  })(SparseDemo.BaseView);
})(jQuery);
