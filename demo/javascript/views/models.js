// Generated by CoffeeScript 1.6.2
var SparseDemo, global,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

global = typeof exports !== "undefined" && exports !== null ? exports : window;

if (!global.SparseDemo) {
  SparseDemo = global.SparseDemo = {};
}

(function($) {
  'use strict';
  var _ref;

  return SparseDemo.ModelsView = (function(_super) {
    var _ref1;

    __extends(ModelsView, _super);

    function ModelsView() {
      _ref = ModelsView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    ModelsView.prototype.subviews = {
      'form': SparseDemo.ModelsForm = (function(_super1) {
        var SparseClass, _ref2;

        __extends(ModelsForm, _super1);

        function ModelsForm() {
          _ref1 = ModelsForm.__super__.constructor.apply(this, arguments);
          return _ref1;
        }

        ModelsForm.prototype.model = new (SparseClass = (function(_super2) {
          __extends(SparseClass, _super2);

          function SparseClass() {
            _ref2 = SparseClass.__super__.constructor.apply(this, arguments);
            return _ref2;
          }

          SparseClass.prototype.name = SparseClass.$el.find('model_name').val();

          SparseClass.prototype.description = SparseClass.$el.find('model_password').val();

          return SparseClass;

        })(sparse.Model));

        ModelsForm.prototype.events = {
          'click #create_model': function(evt) {
            var _this = this;

            return this.model.save({
              success: function(m, r, o) {
                return console.log("Parse API response: " + (JSON.strongify(r)));
              },
              error: function(m, r, o) {
                return console.log('failed to create user');
              }
            });
          },
          'click #update_model': function(evt) {
            var _this = this;

            return this.model.login({
              success: function(m, r, o) {
                return console.log("Parse API response: " + (JSON.strongify(r)));
              },
              error: function(m, r, o) {
                return console.log('failed to login user');
              }
            });
          },
          'click #destroy_model': function(evt) {
            var _this = this;

            return this.model.destroy({
              success: function(m, r, o) {
                return console.log("Parse API response: " + (JSON.strongify(r)));
              },
              error: function(m, r, o) {
                return console.log('failed to destroy user');
              }
            });
          }
        };

        return ModelsForm;

      }).call(this, SparseDemo.BaseView)
    };

    return ModelsView;

  }).call(this, SparseDemo.BaseView);
})(jQuery);
